// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())

  // ✅ Post와의 역참조(반대쪽) 필드 추가
  posts     Post[]
}

model Post {
  id        String   @id @default(cuid())
  title     String
  content   String?
  published Boolean  @default(false)
  authorId  String

  // ✅ User와의 관계 (authorId 외래키)
  author    User     @relation(fields: [authorId], references: [id])

  createdAt DateTime @default(now())
}

model SurveyResponse {
  id                    String   @id @default(cuid())
  name                  String
  affiliation           String
  job                   String
  years                 Int
  round                 Int
  questions             Json     // 질문과 답변을 JSON으로 저장
  savedAt               DateTime @default(now())
  
  // 새로 추가된 필드들
  employeeId            String   // 사번
  position              String   // 직급 (예: 운전3급, 토목4급)
  department            String   // 소속 (예: OO본부 OO처)
  gender                String   // 성별
  dateOfBirth           String   // 생년월일
  officePhone           String   // 사무실 연락처
  companyEmail          String   // 회사 메일
  railroadCertification String   // 철도 관련 자격증 보유 여부
  jobEducation          String   // 직무교육이수 여부
  healthCheckDate       String   // 건강검진 일시
  bodyTemperature       String   // 건강검진시 체온
  systolicBP            String   // 건강검진시 수축기 혈압
  pulse                 String   // 건강검진시 맥박
  workType              String   // 근무유형
  workTime              String   // 출근/퇴근일시
  employeeCardNumber    String   // 사원증 출입증 일련번호
  
  @@index([name, round])
}


